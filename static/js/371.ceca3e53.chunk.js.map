{"version":3,"file":"static/js/371.ceca3e53.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/FindContacts/FindContacts.styled.jsx","components/FindContacts/FindContacts.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form as FormikForm, Field as FormikField, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\ndisplay: flex;\nflex-direction: column;\ngap: 12px;\nwidth: 30%;\nmargin-bottom: 32px;\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 4px;\nfont-size: 18px;\nfont-weight: 500;\ncolor: #f5f5f583;\n`;\n\nexport const Input = styled(FormikField)`\npadding: 6px;\nfont-size: 22px;\nborder-radius: 6px;\n`;\n\nexport const Button = styled.button`\nwidth: 150px;\nfont-size: 22px;\nborder-radius: 6px;\nbackground-color: #606060;\ntransition: background-color 300ms linear, color 300ms linear;\n\n:hover {\n  background-color: #569271;\n  color: whitesmoke;\n}\n`;\n\nexport const Error = styled(ErrorMessage)`\ncolor: #ff00009a;\nfont-size: 18px;\n`;","export const selectFilter = state => state.filter;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"../filter/selectors\";\n\nexport const selectContacts = state => state.contacts;\nexport const selectContactsItems = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector([selectContactsItems, selectFilter], (contacts, filter) => {\n  return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\n});","import { Formik } from 'formik';\nimport { Form, Label, Input, Button, Error } from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from \"notiflix\";\nimport { selectContactsItems } from 'redux/contacts/selectors';\n\nconst Schema = Yup.object({\n  name: Yup.string().required('Required')\n    .matches(/(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/, 'Invalid by name'),\n  number: Yup.string().required('Required')\n    .matches(/(\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})/, 'Invalid by number'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n\n  return (\n    <Formik\n      initialValues={\n        {\n          name: '',\n          number: '',\n        }\n      }\n      validationSchema={Schema}\n      onSubmit={(values, actions) => {\n        if (contacts.some(value => value.name.toLocaleLowerCase() === values.name.toLocaleLowerCase())) {\n          Notiflix.Notify.failure(`${values.name} is already in contacts!`);\n        } else {\n          dispatch(addContact(values));\n        }\n        actions.resetForm();\n      }\n    }\n    >\n    <Form autoComplete='off'>\n      <Label>Name\n        <Input name=\"name\" />\n        <Error name=\"name\" component=\"div\"/>\n      </Label>\n      <Label>Number\n        <Input name=\"number\" type=\"tel\" />\n        <Error name=\"number\" component=\"div\"/>\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n    </Formik>\n  )\n};\n","import styled from \"styled-components\";\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  overflow: auto;\n  width: calc((100% - 90px) / 6);\n  min-height: 300px;\n  border: 3px solid whitesmoke;;\n  border-radius: 6px;\n`;\n\nexport const Text = styled.p`\ncolor: whitesmoke;\nfont-size: 32px;\nfont-weight: 500;\n`;\n\nexport const Button = styled.button`\nposition: absolute;\nbottom: 12px;\nright: 12px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder-radius: 50%;\nwidth: 54px;\nheight: 54px;\nborder: 1px solid red;\ncolor: #ff00009a;\nbackground-color: transparent;\ntransition: background-color 300ms linear, color 300ms linear;\n:hover, :focus {\n  color: white;\n  background-color: #ff00009a;\n}\n`;\n\nexport const Icon = styled(AiOutlineDelete)`\nfont-size: 34px;\nfill: currentColor;\n`;","import PropTypes from 'prop-types';\nimport { Item, Text, Button, Icon } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ item: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Text>{name}</Text>\n      <Text>{number}</Text>\n      <Button onClick={() => dispatch(deleteContact(id))} type='button'><Icon /></Button>\n    </Item>\n  )\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  margin-top: 22px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 18px;\n`;","import { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { List } from \"./ContactList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { ProgressBar } from  'react-loader-spinner'\n\nexport const ContactList = () => {\n  const { isLoading, error } = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n  \n  return (\n    <>\n      {isLoading ? <ProgressBar /> : <List>\n        {filteredContacts.map(item => {\n          return (\n            <ContactItem key={item.id} item={item}></ContactItem>\n          )\n        })}\n      </List>}\n      {error && <p>{error}</p>}\n    </>\n  )\n};\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\nwidth: 30%;\npadding: 6px;\nfont-size: 18px;\nborder-radius: 6px;\n`;","import { Label } from \"components/ContactForm/ContactForm.styled\";\nimport { Input } from \"./FindContacts.styled\";\nimport { setFilter } from \"redux/filter/slice\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from \"redux/filter/selectors\";\n\nexport const FindContacts = () => {\n  const dispatch = useDispatch();\n  const stateFilter = useSelector(selectFilter);\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={stateFilter}\n        onChange={e => dispatch(setFilter(e.currentTarget.value))}\n      />\n    </Label>\n  )\n};","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\ncolor: whitesmoke;\nfont-size: 42px;\nmargin-bottom: 18px;\n`;","import PropTypes from 'prop-types';\nimport { Title } from \"./Section.styled\";\n\nexport const Section = ({ children, title }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  )\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\nimport photo from '../../images/photo.jpeg';\n\nexport const Div = styled.div`\n  padding: 42px;\n  padding-top: 124px;\n  background-image: linear-gradient(rgba(10,10,10,.8),rgba(10,10,10,.8)),url(${photo});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 100%;\n`;","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { FindContacts } from \"components/FindContacts/FindContacts\";\nimport { Section } from \"components/Section/Section\";\nimport { Div } from \"./Contacts.styled\";\n\nconst Contacts = () => {\n  return (\n    <Div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <FindContacts />\n        <ContactList />\n      </Section>\n    </Div>\n  )\n};\n\nexport default Contacts"],"names":["Form","styled","FormikForm","Label","Input","FormikField","Button","Error","ErrorMessage","selectFilter","state","filter","selectContacts","contacts","selectContactsItems","items","selectFilteredContacts","createSelector","item","name","toLowerCase","includes","Schema","Yup","required","matches","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","some","value","toLocaleLowerCase","Notiflix","addContact","resetForm","autoComplete","component","type","Item","Text","Icon","AiOutlineDelete","ContactItem","id","onClick","deleteContact","List","ContactList","isLoading","error","filteredContacts","useEffect","fetchContacts","map","FindContacts","stateFilter","onChange","e","setFilter","currentTarget","Title","Section","children","title","Div","photo"],"sourceRoot":""}