{"version":3,"file":"static/js/877.506fbe6d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/FindContacts/FindContacts.styled.jsx","components/FindContacts/FindContacts.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form as FormikForm, Field as FormikField, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\ndisplay: flex;\nflex-direction: column;\ngap: 16px;\npadding: 12px;\nborder-radius: 4px;\nborder: 1px solid gray;\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\nfont-size: 18px;\nfont-weight: 500;\n`;\n\nexport const Input = styled(FormikField)`\npadding: 4px;\nfont-size: 14px;\nborder-radius: 4px;\nborder: 1px solid gray;\nbox-shadow: 4px 4px 6px 0 rgba(217,217,217,1);\n`;\n\nexport const Button = styled.button`\nfont-size: 14px;\nwidth: 100px;\nborder-radius: 4px;\nborder: 1px solid gray;\nbox-shadow: 4px 4px 6px 0 rgba(217,217,217,1);\ntransition: background-color 300ms linear, color 300ms linear;\n:hover, :focus {\n  background-color: #71A92C;\n  color: white;\n}\n`;\n\nexport const Error = styled(ErrorMessage)`\ncolor: red;\nfont-size: 14px;\n`;","export const selectFilter = state => state.filter;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { selectFilter } from \"../filter/selectors\";\n\nexport const selectContacts = state => state.contacts;\nexport const selectContactsItems = state => state.contacts.items;\n\nexport const selectFilteredContacts = createSelector([selectContactsItems, selectFilter], (contacts, filter) => {\n  return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()));\n});","import { Formik } from 'formik';\nimport { Form, Label, Input, Button, Error } from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from \"notiflix\";\nimport { selectContactsItems } from 'redux/contacts/selectors';\n\nconst Schema = Yup.object({\n  name: Yup.string().required('Required')\n    .matches(/(^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$)/, 'Invalid by name'),\n  number: Yup.string().required('Required')\n    .matches(/(\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})/, 'Invalid by number'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n\n  return (\n    <Formik\n      initialValues={\n        {\n          name: '',\n          number: '',\n        }\n      }\n      validationSchema={Schema}\n      onSubmit={(values, actions) => {\n        if (contacts.some(value => value.name.toLocaleLowerCase() === values.name.toLocaleLowerCase())) {\n          Notiflix.Notify.failure(`${values.name} is already in contacts!`);\n        } else {\n          dispatch(addContact(values));\n        }\n        actions.resetForm();\n      }\n    }\n    >\n    <Form>\n      <Label>Name\n        <Input name=\"name\" />\n        <Error name=\"name\" component=\"div\"/>\n      </Label>\n      <Label>Number\n        <Input name=\"number\" type=\"tel\" />\n        <Error name=\"number\" component=\"div\"/>\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n    </Formik>\n  )\n};\n","import styled from \"styled-components\";\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: baseline;\ngap: 8px;\n:after {\n  content: \"\";\n  height: 1px;\n  background-color: grey;\n  flex-grow: 1;\n}\n`;\n\nexport const Text = styled.p`\nfont-weight: 500;\n`;\n\nexport const Button = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\norder: 1;\nborder-radius: 50%;\nwidth: 34px;\nheight: 34px;\nborder: 1px solid red;\nbox-shadow: 2px 2px 6px 0px rgba(209,132,132,1);\ncolor: red;\nbackground-color: transparent;\ntransition: background-color 300ms linear, color 300ms linear;\n:hover, :focus {\n  color: white;\n  background-color: red;\n}\n`;\n\nexport const Icon = styled(AiOutlineDelete)`\nfill: currentColor;\n`;","import PropTypes from 'prop-types';\nimport { Item, Text, Button, Icon } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ item: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <Text>{name}: {number}</Text>\n      <Button onClick={() => dispatch(deleteContact(id))} type='button'><Icon /></Button>\n    </Item>\n  )\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\noverflow: auto;\npadding: 8px;\nmax-height: 215px;\nmargin-top: 18px;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\n`;","import { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { List } from \"./ContactList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { ProgressBar } from  'react-loader-spinner'\n\nexport const ContactList = () => {\n  const { isLoading, error } = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n  \n  return (\n    <>\n      {isLoading ? <ProgressBar /> : <List>\n        {filteredContacts.map(item => {\n          return (\n            <ContactItem key={item.id} item={item}></ContactItem>\n          )\n        })}\n      </List>}\n      {error && <p>{error}</p>}\n    </>\n  )\n};\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\nwidth: 50%;\npadding: 4px;\nfont-size: 14px;\nborder-radius: 4px;\nborder: 1px solid gray;\nbox-shadow: 4px 4px 6px 0 rgba(217,217,217,1);\n`;","import { Label } from \"components/ContactForm/ContactForm.styled\";\nimport { Input } from \"./FindContacts.styled\";\nimport { setFilter } from \"redux/filter/slice\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from \"redux/filter/selectors\";\n\nexport const FindContacts = () => {\n  const dispatch = useDispatch();\n  const stateFilter = useSelector(selectFilter);\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={stateFilter}\n        onChange={e => dispatch(setFilter(e.currentTarget.value))}\n      />\n    </Label>\n  )\n};","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\nfont-size: 42px;\nmargin-bottom: 18px;\n`;\n\nexport const AfterTitle = styled.h2`\nfont-size: 32px;\nmargin-bottom: 18px;\n`;","import PropTypes from 'prop-types';\nimport { Title, AfterTitle } from \"./Section.styled\";\n\nexport const Section = ({ children, title }) => {\n  return (\n    <section>\n      {title === 'Phonebook' ? <Title>{title}</Title> : <AfterTitle>{title}</AfterTitle>}\n      {children}\n    </section>\n  )\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { FindContacts } from \"components/FindContacts/FindContacts\";\nimport { Section } from \"components/Section/Section\";\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <FindContacts />\n        <ContactList />\n      </Section>\n    </>\n  )\n};\n\nexport default Contacts"],"names":["Form","styled","FormikForm","Label","Input","FormikField","Button","Error","ErrorMessage","selectFilter","state","filter","selectContacts","contacts","selectContactsItems","items","selectFilteredContacts","createSelector","item","name","toLowerCase","includes","Schema","Yup","required","matches","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","some","value","toLocaleLowerCase","Notiflix","addContact","resetForm","component","type","Item","Text","Icon","AiOutlineDelete","ContactItem","id","onClick","deleteContact","List","ContactList","isLoading","error","filteredContacts","useEffect","fetchContacts","map","FindContacts","stateFilter","onChange","e","setFilter","currentTarget","Title","AfterTitle","Section","children","title"],"sourceRoot":""}