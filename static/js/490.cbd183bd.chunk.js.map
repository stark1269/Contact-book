{"version":3,"file":"static/js/490.cbd183bd.chunk.js","mappings":"uXAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mFAMJE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oFAMLI,EAAQJ,EAAAA,GAAAA,MAAH,gJASLK,EAAOL,EAAAA,GAAAA,KAAH,oIASJM,EAAMN,EAAAA,GAAAA,OAAH,+PAaHO,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,6DAKLS,EAAUT,EAAAA,GAAAA,IAAH,+CAIPU,EAASV,EAAAA,GAAAA,OAAH,oL,qKC/CbW,EAASC,EAAAA,GAAW,CACxBC,KAAMD,EAAAA,KAAaE,IAAI,EAAG,kBAAkBC,IAAI,GAAI,mBAAmBC,SAAS,YAChFC,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUN,EAAAA,KAAaE,IAAI,EAAG,kBAC3BK,QAAQ,WAAY,iCAAiCH,SAAS,cAGtDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,SAAC,KAAD,CACEC,cACE,CACEb,KAAM,GACNI,MAAO,GACPC,SAAU,IAGdS,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAClBT,GAASU,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAZH,UAcE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,UAAC,KAAD,YACE,SAAC,KAAD,wBACA,SAAC,KAAD,CAAOnB,KAAK,UACZ,SAAC,KAAD,CAAOA,KAAK,OAAOoB,UAAU,YAE/B,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,SAAC,KAAD,CAAOC,KAAK,QAAQrB,KAAK,WACzB,SAAC,KAAD,CAAOA,KAAK,QAAQoB,UAAU,YAEhC,UAAC,KAAD,YACE,SAAC,KAAD,wBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAMV,EAAW,WAAa,OAAQX,KAAK,cAClD,SAAC,KAAD,CAAQsB,QAAS,kBAAMV,GAAaD,EAAnB,EAA8BU,KAAK,SAApD,SAA8DV,GAAW,SAAC,MAAD,KAAmB,SAAC,MAAD,UAE9F,SAAC,KAAD,CAAOX,KAAK,WAAWoB,UAAU,YAEnC,SAAC,KAAD,CAAKC,KAAK,SAAV,0BAIP,E,6BCtDYE,EAAMpC,EAAAA,GAAAA,IAAH,wTAM+DqC,GAOlEC,EAAQtC,EAAAA,GAAAA,GAAH,8DCJlB,EATiB,WACf,OACE,UAACoC,EAAD,YACE,SAACE,EAAD,4BACA,SAAClB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { Form as FormikForm, Field as FormikField, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Input = styled(FormikField)`\n  font-size: 22px;\n  padding: 6px;\n  border-radius: 6px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 18px;\n  font-weight: 500;\n  color: #f5f5f583;\n`;\n\nexport const Span = styled.span`\n  position: relative;\n  ::after {\n    content: '*';\n    position: absolute;\n    color: #ff00009a;\n  }\n`;\n\nexport const Btn = styled.button`\n  font-size: 22px;\n  padding: 6px;\n  border-radius: 6px;\n  background-color: #606060;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  :hover {\n    background-color: #569271;\n    color: whitesmoke;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\ncolor: #ff00009a;\nfont-size: 18px;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 2px;\n  right: 4px;\n  padding: 0;\n  font-size: 24px;\n  border: none;\n  color: black;\n  background-color: transparent;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Btn, Button, Error, Form, Input, Label, Span, Wrapper } from './RegisterForm.styled';\nimport { useState } from 'react';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nconst Schema = Yup.object({\n  name: Yup.string().min(3, 'Min of 3 chars').max(10, 'Max of 10 chars').required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().min(8, 'Min of 8 chars')\n    .matches(/[a-zA-Z]/, 'Add at least one Latin letter').required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPass, setShowPass] = useState(false);\n\n  return (\n    <Formik\n      initialValues={\n        {\n          name: '',\n          email: '',\n          password: '',\n        }\n      }\n      validationSchema={Schema}\n      onSubmit={(value, { resetForm }) => {\n        dispatch(register(value))\n        resetForm();\n      }}\n    >\n      <Form autoComplete='off'>\n        <Label>\n          <Span>Username</Span>\n          <Input name=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          <Span>Email</Span>\n          <Input type=\"email\" name=\"email\" />\n          <Error name=\"email\" component=\"div\" />\n        </Label>\n        <Label>\n          <Span>Password</Span>\n          <Wrapper>\n            <Input type={showPass ? 'password' : 'text'} name=\"password\" />\n            <Button onClick={() => setShowPass(!showPass)} type='button'>{showPass ? <AiOutlineEye /> : <AiOutlineEyeInvisible />}</Button>\n          </Wrapper>\n          <Error name=\"password\" component=\"div\" />\n        </Label>\n        <Btn type=\"submit\">Register</Btn>\n      </Form>\n    </Formik>\n  );\n};","import styled from \"styled-components\";\nimport photo from '../../images/photo.jpeg';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 18px;\n  background-image: linear-gradient(rgba(10,10,10,.7),rgba(10,10,10,.7)),url(${photo});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 100vh;\n`;\n\nexport const Title = styled.h2`\ncolor: whitesmoke;\nfont-size: 54px;\n`;","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\nimport { Div, Title } from \"./Register.styled\";\n\nconst Register = () => {\n  return (\n    <Div>\n      <Title>Registration</Title>\n      <RegisterForm />\n    </Div>\n  )\n};\n\nexport default Register"],"names":["Form","styled","FormikForm","Input","FormikField","Label","Span","Btn","Error","ErrorMessage","Wrapper","Button","Schema","Yup","name","min","max","required","email","password","matches","RegisterForm","dispatch","useDispatch","useState","showPass","setShowPass","initialValues","validationSchema","onSubmit","value","resetForm","register","autoComplete","component","type","onClick","Div","photo","Title"],"sourceRoot":""}